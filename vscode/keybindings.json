// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "alt+`",
    "command": "workbench.files.action.collapseExplorerFolders"
  },
  {
    "key": "ctrl+u",
    "command": "thunder-client.import-curl",
    "when": "view.thunder-client-sidebar.visible"
  },
  {
    "key": "ctrl+u",
    "command": "-thunder-client.import-curl",
  },
  {
    "key": "ctrl+alt+j",
    "command": "liveshare.join",
    "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared' && !inputFocus"
  },
  {
    "key": "ctrl+alt+j",
    "command": "-liveshare.join",
    "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
  },
  {
    "key": "alt+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+h",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "list.expand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "ctrl+a",
    "command": "editor.action.selectAll",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+a",
    "command": "-editor.action.selectAll"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.files.saveAs",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "end",
    "command": "cursorEnd",
    "when": "textInputFocus && !editorTextFocus"
  },
  {
    "key": "end",
    "command": "-cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "home",
    "command": "cursorHome",
    "when": "textInputFocus && !editorTextFocus"
  },
  {
    "key": "home",
    "command": "-cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "pageup",
    "command": "cursorPageUp",
    "when": "textInputFocus && !editorTextFocus"
  },
  {
    "key": "pageup",
    "command": "-cursorPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "pagedown",
    "command": "cursorPageDown",
    "when": "textInputFocus && !editorTextFocus"
  },
  {
    "key": "pagedown",
    "command": "-cursorPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "left",
    "command": "cursorLeft",
    "when": "textInputFocus && !editorTextFocus"
  },
  {
    "key": "left",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "left",
    "command": "extension.vim_left",
    "when": "vim.active && !editorTextFocus && !inDebugRepl && textInputFocus"
  },
  {
    "key": "left",
    "command": "-extension.vim_left",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "right",
    "command": "cursorRight",
    "when": "textInputFocus && !editorTextFocus"
  },
  {
    "key": "right",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "right",
    "command": "extension.vim_right",
    "when": "textInputFocus && !editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "right",
    "command": "-extension.vim_right",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "up",
    "command": "-cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "up",
    "command": "extension.vim_up",
    "when": "textInputFocus && vim.active && !editorTextFocus && !inDebugRepl && !parameterHintsVisible && !suggestWidgetVisible"
  },
  {
    "key": "up",
    "command": "-extension.vim_up",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !parameterHintsVisible && !suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "cursorDown",
    "when": "textInputFocus && !editorTextFocus"
  },
  {
    "key": "down",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "down",
    "command": "extension.vim_down",
    "when": "textInputFocus && !editorTextFocus && vim.active && !inDebugRepl && !parameterHintsVisible && !suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "-extension.vim_down",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !parameterHintsVisible && !suggestWidgetVisible"
  },
  {
    "key": "end",
    "command": "extension.vim_end",
    "when": "textInputFocus && !editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "end",
    "command": "-extension.vim_end",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "home",
    "command": "extension.vim_home",
    "when": "textInputFocus && !editorTextFocus&& vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "home",
    "command": "-extension.vim_home",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+alt+\\",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "alt+\\",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "shift+alt+\\",
    "command": "workbench.action.terminal.killAll"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "alt+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "alt+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "tab",
    "command": "acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+alt+m",
    "command": "-extension.toggleRegexPreview"
  },
  {
    "key": "up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+down",
    "command": "scrollLineDown",
    "when": "textInputFocus && !vim.active"
  },
  {
    "key": "ctrl+down",
    "command": "-scrollLineDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly && !vim.active"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly && !vim.active"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !vim.active"
  },
  {
    "key": "ctrl+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !vim.active"
  },
  {
    "key": "ctrl+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+up",
    "command": "scrollLineUp",
    "when": "textInputFocus && !vim.active"
  },
  {
    "key": "ctrl+up",
    "command": "-scrollLineUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.showAllEditors",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.showAllEditors"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+\\",
    "command": "workbench.action.terminal.moveToEditor"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+m",
    "command": "welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+alt+win+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines"
  },
  {
    "key": "ctrl+alt+j",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+k",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+alt+k",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "shift+pageup",
    "command": "-workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+alt+j",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "shift+pagedown",
    "command": "-workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+m",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+alt+`",
    "command": "extension.terminalCapture.runCapture"
  },
  {
    "key": "ctrl+alt+t",
    "command": "workbench.action.closeSidebar"
  },
  {
    "key": "space",
    "command": "list.select",
    "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "space",
    "command": "nerdtree.openFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "space",
    "command": "list.select",
    "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  }
]